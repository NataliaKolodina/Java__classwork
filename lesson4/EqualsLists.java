// üìå 1) –ó–∞–º–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤ ArrayList –¥–æ–±–∞–≤—è—Ç—Å—è 10000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
// üìå 2) –ó–∞–º–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤ LinkedList –¥–æ–±–∞–≤—è—Ç—Å—è 10000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
// –°—Ä–∞–≤–Ω–∏—Ç–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º.

import java.util.ArrayList;
import java.util.LinkedList;

public class EqualsLists {
  public static void main(String[] args) {

    int count = 100_000;
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü

    System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü");
    long start = System.currentTimeMillis();
    getArrayListAddLast(count);
    System.out.println(System.currentTimeMillis() - start);

    start = System.currentTimeMillis();
    getLinkedListAddLast(count);
    System.out.println(System.currentTimeMillis() - start);

    System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ");

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ
    start = System.currentTimeMillis();
    getArrayListAddFirst(count);
    System.out.println(System.currentTimeMillis() - start);

    start = System.currentTimeMillis();
    getLinkedListAddFirst(count);
    System.out.println(System.currentTimeMillis() - start);

    System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É");

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É
    start = System.currentTimeMillis();
    getArrayListAddMiddle(count);
    System.out.println(System.currentTimeMillis() - start);

    start = System.currentTimeMillis();
    getLinkedListAddMiddle(count);
    System.out.println(System.currentTimeMillis() - start);
  }

  public static ArrayList<Integer> getArrayListAddLast(int count) {
    ArrayList<Integer> arrayList = new ArrayList<>();
    for (int i = 0; i < count; i++) {
      arrayList.add(i);
    }
    return arrayList;
  }

  public static LinkedList<Integer> getLinkedListAddLast(int count) {
    LinkedList<Integer> linkedList = new LinkedList<>();
    for (int i = 0; i < count; i++) {
      linkedList.add(i);
    }
    return linkedList;
  }

  public static ArrayList<Integer> getArrayListAddFirst(int count) {
    ArrayList<Integer> arrayList = new ArrayList<>();
    for (int i = 0; i < count; i++) {
      arrayList.add(0, i);
    }
    return arrayList;
  }

  public static LinkedList<Integer> getLinkedListAddFirst(int count) {
    LinkedList<Integer> linkedList = new LinkedList<>();
    for (int i = 0; i < count; i++) {
      linkedList.addFirst(i);
    }
    return linkedList;
  }

  public static ArrayList<Integer> getArrayListAddMiddle(int count) {
    ArrayList<Integer> arrayList = new ArrayList<>();
    for (int i = 0; i < count; i++) {
      arrayList.add(arrayList.size() / 2, i);
    }
    return arrayList;
  }

  public static LinkedList<Integer> getLinkedListAddMiddle(int count) {
    LinkedList<Integer> linkedList = new LinkedList<>();
    for (int i = 0; i < count; i++) {
      linkedList.add(linkedList.size() / 2, i);
    }
    return linkedList;
  }
}
